Index: dnsmasq-2.85/src/network.c
===================================================================
--- dnsmasq-2.85.orig/src/network.c	2021-04-22 13:54:13.720172986 +0800
+++ dnsmasq-2.85/src/network.c	2021-04-22 13:54:38.920172259 +0800
@@ -1359,8 +1359,16 @@
   return 1;
 }
 
+#ifdef ZYXEL_PATCH
+#define allocate_sfd(a, i, f) do_allocate_sfd(a, i, f, 0)
+#define allocate_sfd_mark(a, i, f, m) do_allocate_sfd(a, i, f, m)
+
+static struct serverfd *do_allocate_sfd(union mysockaddr *addr,
+                                        char *intname, unsigned int ifindex, unsigned long mark)
+#else
 static struct serverfd *
 allocate_sfd (union mysockaddr *addr, char *intname, unsigned int ifindex)
+#endif
 {
   struct serverfd *sfd;
   int errsave;
@@ -1395,6 +1403,11 @@
     free (sfd);
     return NULL;
   }
+#ifdef ZYXEL_PATCH
+  if (mark != 0) {
+    setsockopt(sfd->fd, SOL_SOCKET, SO_MARK, &mark, sizeof(mark));
+  }
+#endif
 
   if ((addr->sa.sa_family == AF_INET6
        && setsockopt (sfd->fd, IPPROTO_IPV6, IPV6_V6ONLY, &opt,
@@ -1453,7 +1466,11 @@
     if (!
         (srv->flags & (SERV_LITERAL_ADDRESS | SERV_NO_ADDR | SERV_USE_RESOLV |
                   SERV_NO_REBIND))
+#ifdef ZYXEL_PATCH
+        && !allocate_sfd_mark(&srv->source_addr, srv->interface, srv->ifindex, srv->sock_mark)
+#else
         && !allocate_sfd (&srv->source_addr, srv->interface, srv->ifindex)
+#endif
         && errno != 0 && option_bool (OPT_NOWILD)) {
       (void) prettyprint_addr (&srv->source_addr, daemon->namebuff);
       if (srv->interface[0] != 0) {
@@ -1632,8 +1649,12 @@
       /* 0.0.0.0 is nothing, the stack treats it like 127.0.0.1 */
       if (serv->addr.sa.sa_family == AF_INET &&
           serv->addr.in.sin_addr.s_addr == 0) {
+#ifdef ZYXEL_PATCH    // don't ignoring 0.0.0.0, for special reject query
+        goto SETTOLIST;
+#else
         serv->flags |= SERV_MARK;
         continue;
+#endif
       }
 
       for (iface = daemon->interfaces; iface; iface = iface->next)
@@ -1648,20 +1669,31 @@
 
       /* Do we need a socket set? */
       if (!serv->sfd &&
+#ifdef ZYXEL_PATCH
+          !(serv->sfd =
+            allocate_sfd_mark (&serv->source_addr, serv->interface, serv->ifindex, serv->sock_mark))
+#else
           !(serv->sfd =
             allocate_sfd (&serv->source_addr, serv->interface, serv->ifindex))
+#endif
           && errno != 0) {
         my_syslog (LOG_WARNING,
                    _("ignoring nameserver %s - cannot make/bind socket: %s"),
                    daemon->namebuff, strerror (errno));
+#ifndef ZYXEL_PATCH  //don't free special domain rule. for reject query
         serv->flags |= SERV_MARK;
         continue;
+#endif
       }
 
       if (serv->sfd)
         serv->sfd->used = 1;
     }
 
+#ifdef ZYXEL_PATCH
+  SETTOLIST:
+#endif
+
     if (!(serv->flags & SERV_NO_REBIND)
         && !(serv->flags & SERV_LITERAL_ADDRESS)) {
       if (++count > SERVERS_LOGGED)
Index: dnsmasq-2.85/src/option.c
===================================================================
--- dnsmasq-2.85.orig/src/option.c	2021-04-22 13:54:13.724172986 +0800
+++ dnsmasq-2.85/src/option.c	2021-04-22 13:54:38.920172259 +0800
@@ -930,6 +930,24 @@
   return ret;
 }
 
+#ifdef ZYXEL_PATCH
+static int hextoul_check(char *a, unsigned long *res)
+{
+  char *p;
+
+  if (!a)
+    return 0;
+
+  unhide_metas(a);
+
+  for (p = a; *p; p++)
+    if (!((*p >= '0' && *p <= '9') || (*p >= 'a' && *p <= 'f')))
+      return 0;
+
+  *res = strtoul(a, NULL, 16);
+  return 1;
+}
+#endif
 static int
 atoi_check (char *a, int *res)
 {
@@ -1064,10 +1082,15 @@
 
   return NULL;
 }
-
+#ifdef ZYXEL_PATCH
+char *parse_server(char *arg, union mysockaddr *addr,
+                   union mysockaddr *source_addr, char *interface,
+                   int *flags, unsigned long *mark)
+#else
 char *
 parse_server (char *arg, union mysockaddr *addr,
               union mysockaddr *source_addr, char *interface, int *flags)
+#endif
 {
   int source_port = 0, serv_port = NAMESERVER_PORT;
   char *portno, *source;
@@ -1075,6 +1098,10 @@
   int scope_index = 0;
   char *scope_id;
 
+#ifdef ZYXEL_PATCH
+  char *markPtr = NULL;
+  unsigned long sock_mark = 0;
+#endif
   if (!arg || strlen (arg) == 0) {
     *flags |= SERV_NO_ADDR;
     *interface = 0;
@@ -1085,7 +1112,11 @@
       (portno = split_chr (source, '#')) &&
       !atoi_check16 (portno, &source_port))
     return _("bad port");
-
+#ifdef ZYXEL_PATCH
+  if (source &&                 /* is there a source. */
+      (markPtr = split_chr(source, '$')) && !hextoul_check(markPtr, &sock_mark))
+    return _("bad mark");
+#endif
   if ((portno = split_chr (arg, '#')) &&        /* is there a port no. */
       !atoi_check16 (portno, &serv_port))
     return _("bad port");
@@ -1115,6 +1146,11 @@
     source_addr->in.sin_port = htons (daemon->query_port);
 
     if (source) {
+#ifdef ZYXEL_PATCH
+      if (mark) {
+        *mark = sock_mark;
+      }
+#endif
       if (flags)
         *flags |= SERV_HAS_SOURCE;
       source_addr->in.sin_port = htons (source_port);
@@ -2767,9 +2803,15 @@
       else if (strcmp (arg, "#") == 0)
         newlist->flags |= SERV_USE_RESOLV;      /* treat in ordinary way */
       else {
+#ifdef ZYXEL_PATCH
+        char *err =
+          parse_server (arg, &newlist->addr, &newlist->source_addr,
+                        newlist->interface, &newlist->flags, &newlist->sock_mark);
+#else
         char *err =
           parse_server (arg, &newlist->addr, &newlist->source_addr,
                         newlist->interface, &newlist->flags);
+#endif
         if (err) {
           server_list_free (newlist);
           ret_err (err);
@@ -2817,10 +2859,15 @@
       else
         ret_err (gen_err);
 
+#ifdef ZYXEL_PATCH
+      string =
+        parse_server (comma, &serv->addr, &serv->source_addr, serv->interface,
+                      &serv->flags, &serv->sock_mark);
+#else
       string =
         parse_server (comma, &serv->addr, &serv->source_addr, serv->interface,
                       &serv->flags);
-
+#endif
       if (string)
         ret_err (string);
 
Index: dnsmasq-2.85/src/dbus.c
===================================================================
--- dnsmasq-2.85.orig/src/dbus.c	2021-04-22 13:54:13.704172987 +0800
+++ dnsmasq-2.85/src/dbus.c	2021-04-22 13:54:38.920172259 +0800
@@ -354,9 +354,15 @@
     memset (&interface, 0, sizeof (interface));
 
     /* parse the IP address */
+#ifdef ZYXEL_PATCH
+    if ((addr_err =
+         parse_server (str_addr, &addr, &source_addr, (char *) &interface,
+                       &flags, NULL))) {
+#else
     if ((addr_err =
          parse_server (str_addr, &addr, &source_addr, (char *) &interface,
                        &flags))) {
+#endif
       error =
         dbus_message_new_error_printf (message, DBUS_ERROR_INVALID_ARGS,
                                        "Invalid IP address '%s': %s", str,
Index: dnsmasq-2.85/src/dnsmasq.h
===================================================================
--- dnsmasq-2.85.orig/src/dnsmasq.h	2021-04-22 13:54:18.496172849 +0800
+++ dnsmasq-2.85/src/dnsmasq.h	2021-04-22 13:54:38.920172259 +0800
@@ -592,6 +592,9 @@
 struct server
 {
   union mysockaddr addr, source_addr;
+#ifdef ZYXEL_PATCH
+  unsigned long sock_mark;
+#endif
   char interface[IF_NAMESIZE + 1];
   unsigned int ifindex;         /* corresponding to interface, above */
   struct serverfd *sfd;
@@ -1444,9 +1447,15 @@
      void set_option_bool (unsigned int opt);
      void reset_option_bool (unsigned int opt);
      struct hostsfile *expand_filelist (struct hostsfile *list);
+#ifdef ZYXEL_PATCH
+     char *parse_server (char *arg, union mysockaddr *addr,
+                         union mysockaddr *source_addr, char *interface,
+                         int *flags, unsigned long *mark);
+#else
      char *parse_server (char *arg, union mysockaddr *addr,
                          union mysockaddr *source_addr, char *interface,
                          int *flags);
+#endif
      int option_read_dynfile (char *file, int flags);
 
 /* forward.c */
Index: dnsmasq-2.85/src/forward.c
===================================================================
--- dnsmasq-2.85.orig/src/forward.c	2021-04-22 13:54:13.716172986 +0800
+++ dnsmasq-2.85/src/forward.c	2021-04-22 13:54:38.924172259 +0800
@@ -609,6 +609,14 @@
             break;
           forward->forwardall++;
         }
+      }else{
+#ifdef ZYXEL_PATCH  //reject query when special domain query has no socket
+        if (type == SERV_HAS_DOMAIN
+            && hostname_isequal (domain, start->domain)) {
+          my_syslog(LOG_WARNING, _("Reject query for %s"), start->domain);
+          break;
+        }
+#endif
       }
 
       if (!(start = start->next))
