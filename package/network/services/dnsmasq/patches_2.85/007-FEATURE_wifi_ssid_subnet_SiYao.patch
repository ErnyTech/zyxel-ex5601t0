Index: dnsmasq-2.85/src/dnsmasq.h
===================================================================
--- dnsmasq-2.85.orig/src/dnsmasq.h	2021-04-20 20:34:11.728465796 +0800
+++ dnsmasq-2.85/src/dnsmasq.h	2021-04-20 20:09:32.158004000 +0800
@@ -969,7 +969,13 @@
   struct dhcp_netid netid;
   struct dhcp_mac *next;
 };
-
+#ifdef ZYXEL_PATCH
+struct dhcp_ifname {
+  char ifname[IF_NAMESIZE];
+  struct dhcp_netid netid;
+  struct dhcp_ifname *next;
+};
+#endif
 struct dhcp_bridge
 {
   char iface[IF_NAMESIZE];
@@ -1260,6 +1266,9 @@
   /* utility string buffer, hold max sized IP address as string */
   char *addrbuff;
   char *addrbuff2;              /* only allocated when OPT_EXTRALOG */
+#ifdef ZYXEL_PATCH
+  struct dhcp_ifname *dhcp_ifnames;
+#endif
 
 #ifdef HAVE_DUMPFILE
   /* file for packet dumps. */
Index: dnsmasq-2.85/src/option.c
===================================================================
--- dnsmasq-2.85.orig/src/option.c	2021-04-20 20:34:11.728465796 +0800
+++ dnsmasq-2.85/src/option.c	2021-04-20 20:22:03.723787100 +0800
@@ -160,6 +160,9 @@
 #define LOPT_DHCPTTL       348
 #define LOPT_TFTP_MTU      349
 #define LOPT_REPLY_DELAY   350
+#ifdef ZYXEL_PATCH
+#define LOPT_TAG_IFNAME   329
+#endif
 #define LOPT_RAPID_COMMIT  351
 #define LOPT_DUMPFILE      352
 #define LOPT_DUMPMASK      353
@@ -342,6 +345,9 @@
   {"script-arp", 0, 0, LOPT_SCRIPT_ARP},
   {"dhcp-ttl", 1, 0, LOPT_DHCPTTL},
   {"dhcp-reply-delay", 1, 0, LOPT_REPLY_DELAY},
+#ifdef ZYXEL_PATCH
+  {"dhcp-ifname", 1, 0, LOPT_TAG_IFNAME},
+#endif
   {"dhcp-rapid-commit", 0, 0, LOPT_RAPID_COMMIT},
   {"dumpfile", 1, 0, LOPT_DUMPFILE},
   {"dumpmask", 1, 0, LOPT_DUMPMASK},
@@ -791,6 +797,10 @@
   LOPT_REPLY_DELAY, ARG_ONE, "<integer>",
       gettext_noop ("Delay DHCP replies for at least number of seconds."),
       NULL}, {
+#ifdef ZYXEL_PATCH
+  LOPT_TAG_IFNAME, ARG_DUP, "set:<tag>,<ifname>",
+        gettext_noop("Map interface name to option set."), NULL}, {
+#endif
   LOPT_RAPID_COMMIT, OPT_RAPID_COMMIT, NULL,
       gettext_noop ("Enables DHCPv4 Rapid Commit option."), NULL}, {
   LOPT_DUMPFILE, ARG_ONE, "<path>",
@@ -3954,6 +3964,23 @@
       }
     }
     break;
+#ifdef ZYXEL_PATCH
+  case LOPT_TAG_IFNAME:        /* --dhcp-ifname */
+    {
+      if (!(comma = split(arg)))
+        ret_err(gen_err);
+      else {
+        struct dhcp_ifname *new = opt_malloc(sizeof(struct dhcp_ifname));
+        new->netid.net = opt_string_alloc(set_prefix(arg));
+        arg = comma;
+        strcpy(new->ifname, arg);
+
+        new->next = daemon->dhcp_ifnames;
+        daemon->dhcp_ifnames = new;
+      }
+    }
+    break;
+#endif
 
   case 'U':                    /* --dhcp-vendorclass */
   case 'j':                    /* --dhcp-userclass */
Index: dnsmasq-2.85/src/rfc2131.c
===================================================================
--- dnsmasq-2.85.orig/src/rfc2131.c	2021-04-20 20:34:11.712465796 +0800
+++ dnsmasq-2.85/src/rfc2131.c	2021-04-20 20:25:23.513737100 +0800
@@ -77,6 +77,10 @@
 static struct dhcp_opt *pxe_opts (int pxe_arch, struct dhcp_netid *netid,
                                   struct in_addr local, time_t now);
 struct dhcp_boot *find_boot (struct dhcp_netid *netid);
+#ifdef ZYXEL_PATCH
+static int find_ifname(unsigned char *subnet_mac, int len, char *ifname,
+                       char *interface);
+#endif
 static int pxe_uefi_workaround (int pxe_arch, struct dhcp_netid *netid,
                                 struct dhcp_packet *mess,
                                 struct in_addr local, time_t now, int pxe);
@@ -125,7 +129,8 @@
 #endif
 #ifdef ZYXEL_PATCH
   char *vendor_class_ptr = NULL;
-
+  struct dhcp_ifname *ifname;
+
 #endif
 
   subnet_addr.s_addr = override.s_addr = 0;
@@ -288,6 +292,16 @@
                        &emac_len);
   }
 
+#ifdef ZYXEL_PATCH
+  for (ifname = daemon->dhcp_ifnames; ifname; ifname = ifname->next) {
+
+    if (find_ifname(mess->chaddr, mess->hlen, ifname->ifname, iface_name)) {
+      ifname->netid.next = netid;
+      netid = &ifname->netid;
+    }
+  }
+#endif
+
   for (mac = daemon->dhcp_macs; mac; mac = mac->next)
     if (mac->hwaddr_len == mess->hlen &&
         (mac->hwaddr_type == mess->htype || mac->hwaddr_type == 0) &&
@@ -2412,6 +2426,41 @@
   return boot;
 }
 
+#ifdef ZYXEL_PATCH
+static int
+find_ifname(unsigned char *subnet_mac, int len, char *ifname, char *interface)
+{
+  FILE *fp;
+  char sysCmd[128] = { 0 };
+  char line[128] = { 0 };
+
+  int sub_mac_idx = 0;
+  char mac_value[32] = { 0 };
+
+  for (sub_mac_idx = 0; sub_mac_idx < len; sub_mac_idx++) {
+    if (0 == sub_mac_idx) {
+      sprintf(mac_value, "%02x", subnet_mac[sub_mac_idx]);
+    } else {
+      sprintf(mac_value, "%s:%02x", mac_value, subnet_mac[sub_mac_idx]);
+    }
+  }
+
+  sprintf(sysCmd, "brctl showmacs %s | grep %s", interface, mac_value);
+  fp = popen(sysCmd, "r");
+
+  if (fp) {
+    while (fgets(line, sizeof(line), fp) != NULL) {
+      if (strstr(line, ifname) != NULL) {
+        pclose(fp);
+        return 1;
+      }
+    }
+    pclose(fp);
+  }
+  return 0;
+}
+#endif
+
 static int
 is_pxe_client (struct dhcp_packet *mess, size_t sz, const char **pxe_vendor)
 {
