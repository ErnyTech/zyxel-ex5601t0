Index: busybox-1.31.1/networking/traceroute.c
===================================================================
--- busybox-1.31.1.orig/networking/traceroute.c	2021-03-18 10:26:16.430541202 +0800
+++ busybox-1.31.1/networking/traceroute.c	2021-03-18 10:26:23.302541235 +0800
@@ -1054,15 +1054,40 @@
 		af = AF_INET;
 	if (op & OPT_IPV6)
 		af = AF_INET6;
+
+#ifdef ZCFG_SUPPORT
+	dest_lsa = host_and_af2sockaddr(argv[0], port, af);
+	if(!dest_lsa){
+		json_object_object_add(tracert_msg, "DiagnosticsState", json_object_new_string("Error_CannotResolveHostName"));
+		payload = json_object_to_json_string(tracert_msg);
+		payloadLen = strlen(payload) + 1;
+		tracertMsgSend(ZCFG_MSG_TRACERT_MSG, payloadLen, payload);
+		json_object_put(tracert_msg);
+		return 0;
+	}
+#else
 	dest_lsa = xhost_and_af2sockaddr(argv[0], port, af);
+#endif
 	af = dest_lsa->u.sa.sa_family;
 	if (af == AF_INET6)
 		minpacket = sizeof(struct ip6_hdr)
 			+ sizeof(struct udphdr)
 			+ sizeof(struct outdata6_t);
 #else
+#ifdef ZCFG_SUPPORT
+	dest_lsa = host2sockaddr(argv[0], port);
+	if(!dest_lsa){
+		json_object_object_add(tracert_msg, "DiagnosticsState", json_object_new_string("Error_CannotResolveHostName"));
+		payload = json_object_to_json_string(tracert_msg);
+		payloadLen = strlen(payload) + 1;
+		tracertMsgSend(ZCFG_MSG_TRACERT_MSG, payloadLen, payload);
+		json_object_put(tracert_msg);
+		return 0;
+	}
+#else
 	dest_lsa = xhost2sockaddr(argv[0], port);
 #endif
+#endif
 	packlen = minpacket;
 #ifdef ZCFG_SUPPORT
 	if (argv[1])
