Index: json-c-0.13.1/json_object.c
===================================================================
--- json-c-0.13.1.orig/json_object.c	2021-01-29 13:15:06.834078741 +0800
+++ json-c-0.13.1/json_object.c	2021-01-29 19:30:01.318510239 +0800
@@ -62,6 +62,7 @@
 struct json_object *ZcfgAllocFrontendLineRecordJobj = NULL;
 struct json_object *ZcfgAllocFrontendAddrRecordJobj = NULL;
 pthread_mutex_t recordAllocDataMutex = PTHREAD_MUTEX_INITIALIZER;
+__thread char isRecordAllocDataMutexLock = 0;
 #endif
 
 /* ref count debugging */
@@ -492,9 +493,7 @@
 	}
 	else
 	{
-		pthread_mutex_lock(&recordAllocDataMutex);
 		recordFrontendZcfgAllocData(jso, fileName, line);
-		pthread_mutex_unlock(&recordAllocDataMutex);
 	}
 
 	return jso;
@@ -669,6 +668,24 @@
 	return jso;
 }
 
+#ifdef ZCFG_MEMORY_LEAK_DETECT
+struct json_object* _json_object_new_boolean(json_bool b, const char *fileName, int line)
+{
+	struct json_object *jso = json_object_new_boolean(b);
+
+	if(!jso)
+	{
+		return NULL;
+	}
+	else
+	{
+		recordFrontendZcfgAllocData(jso, fileName, line);
+	}
+
+	return jso;
+}
+#endif
+
 json_bool json_object_get_boolean(const struct json_object *jso)
 {
 	if (!jso)
@@ -725,6 +742,25 @@
 	return jso;
 }
 
+#ifdef ZCFG_MEMORY_LEAK_DETECT
+struct json_object* _json_object_new_int(int64_t i, const char *fileName, int line)
+{
+	struct json_object *jso = json_object_new_int(i);
+
+	if(!jso)
+	{
+		return NULL;
+	}
+	else
+	{
+		recordFrontendZcfgAllocData(jso, fileName, line);
+	}
+
+	return jso;
+}
+#endif
+
+
 #if 0 /*ZyXEL to using 64bit int to handle RDM*/
 int32_t json_object_get_int(const struct json_object *jso)
 {
@@ -1163,9 +1199,7 @@
 	}
 	else
 	{
-		pthread_mutex_lock(&recordAllocDataMutex);
 		recordFrontendZcfgAllocData(jso, fileName, line);
-		pthread_mutex_unlock(&recordAllocDataMutex);
 	}
 
 	return jso;
@@ -1376,9 +1410,7 @@
 	}
 	else
 	{
-		pthread_mutex_lock(&recordAllocDataMutex);
 		recordFrontendZcfgAllocData(jso, fileName, line);
-		pthread_mutex_unlock(&recordAllocDataMutex);
 	}
 
 	return jso;
@@ -1726,6 +1758,8 @@
 #ifdef ZCFG_MEMORY_LEAK_DETECT
 void dumpZcfgAllocFrontendRecord()
 {
+	pthread_mutex_lock(&recordAllocDataMutex);
+#if 0 //hide ZcfgAllocFrontendAddrRecordJobj
 	if(ZcfgAllocFrontendAddrRecordJobj != NULL){
 		printf("============================================================\n");
 		printf("json-c Alloc Address Record\n");
@@ -1734,6 +1768,7 @@
 	}
 	else
 		printf("json-c ZcfgAllocFrontendAddrRecordJobj is not init.\n");
+#endif
 
 	if(ZcfgAllocFrontendLineRecordJobj != NULL){
 		printf("============================================================\n");
@@ -1743,6 +1778,7 @@
 	}
 	else
 		printf("json-c ZcfgAllocFrontendLineRecordJobj is not init.\n");
+	pthread_mutex_unlock(&recordAllocDataMutex);
 }
 #endif
 
@@ -1751,11 +1787,16 @@
 {
 	int allocCnt = 0;
 	
+	//printf("1\n");
+	pthread_mutex_lock(&recordAllocDataMutex);
+	isRecordAllocDataMutexLock = 1;
+	
 	if(ZcfgAllocFrontendAddrRecordJobj == NULL)
 		ZcfgAllocFrontendAddrRecordJobj = json_object_new_object();
 	if(ZcfgAllocFrontendLineRecordJobj == NULL)
 		ZcfgAllocFrontendLineRecordJobj = json_object_new_object();
-
+	
+	
 	if(ZcfgAllocFrontendAddrRecordJobj != NULL){
 		json_object_object_add(ZcfgAllocFrontendAddrRecordJobj, pointerAddr, json_object_new_string(fileLine));
 	}
@@ -1765,6 +1806,10 @@
 		allocCnt++;
 		json_object_object_add(ZcfgAllocFrontendLineRecordJobj, fileLine, json_object_new_int(allocCnt));
 	}
+	isRecordAllocDataMutexLock = 0;
+	pthread_mutex_unlock(&recordAllocDataMutex);
+	//printf("2\n");
+	
 }
 #endif
 
@@ -1793,19 +1838,43 @@
 		printf("Free NULL pointer\n");
 		return;
 	}
+	
 	if(ZcfgAllocFrontendAddrRecordJobj != NULL){
-		sprintf(pointerAddr, "%p", obj);
-		fileLine = json_object_get_string(json_object_object_get(ZcfgAllocFrontendAddrRecordJobj, pointerAddr));
-		
-		if(fileLine != NULL && *fileLine != '\0' && ZcfgAllocFrontendLineRecordJobj != NULL){
-			allocCnt = json_object_get_int(json_object_object_get(ZcfgAllocFrontendLineRecordJobj, fileLine));
-			allocCnt --;
-			if(allocCnt > 0)
-				json_object_object_add(ZcfgAllocFrontendLineRecordJobj, fileLine, json_object_new_int(allocCnt));
-			else
-				json_object_object_del(ZcfgAllocFrontendLineRecordJobj, fileLine);
+		if(isRecordAllocDataMutexLock){
+			sprintf(pointerAddr, "%p", obj);
+			fileLine = json_object_get_string(json_object_object_get(ZcfgAllocFrontendAddrRecordJobj, pointerAddr));
+			
+			if(fileLine != NULL && *fileLine != '\0' && ZcfgAllocFrontendLineRecordJobj != NULL){
+				allocCnt = json_object_get_int(json_object_object_get(ZcfgAllocFrontendLineRecordJobj, fileLine));
+				allocCnt --;
+				if(allocCnt > 0)
+					json_object_object_add(ZcfgAllocFrontendLineRecordJobj, fileLine, json_object_new_int(allocCnt));
+				else
+					json_object_object_del(ZcfgAllocFrontendLineRecordJobj, fileLine);
+			}
+			json_object_object_del(ZcfgAllocFrontendAddrRecordJobj, pointerAddr);
+		}
+		else{
+			//printf("3\n");
+			pthread_mutex_lock(&recordAllocDataMutex);
+			isRecordAllocDataMutexLock = 1;
+			sprintf(pointerAddr, "%p", obj);
+			fileLine = json_object_get_string(json_object_object_get(ZcfgAllocFrontendAddrRecordJobj, pointerAddr));
+			
+			if(fileLine != NULL && *fileLine != '\0' && ZcfgAllocFrontendLineRecordJobj != NULL){
+				allocCnt = json_object_get_int(json_object_object_get(ZcfgAllocFrontendLineRecordJobj, fileLine));
+				allocCnt --;
+				if(allocCnt > 0)
+					json_object_object_add(ZcfgAllocFrontendLineRecordJobj, fileLine, json_object_new_int(allocCnt));
+				else
+					json_object_object_del(ZcfgAllocFrontendLineRecordJobj, fileLine);
+			}
+			json_object_object_del(ZcfgAllocFrontendAddrRecordJobj, pointerAddr);
+			isRecordAllocDataMutexLock = 0;
+			pthread_mutex_unlock(&recordAllocDataMutex);
+			//printf("4\n");
 		}
-		json_object_object_del(ZcfgAllocFrontendAddrRecordJobj, pointerAddr);
 	}
+
 }
 #endif
Index: json-c-0.13.1/json_tokener.c
===================================================================
--- json-c-0.13.1.orig/json_tokener.c	2021-01-29 13:15:06.834078741 +0800
+++ json-c-0.13.1/json_tokener.c	2021-01-29 13:15:06.850078741 +0800
@@ -196,9 +196,7 @@
 	}
 	else
 	{
-		pthread_mutex_lock(&recordAllocDataMutex);
 		recordFrontendZcfgAllocData(obj, fileName, line);
-		pthread_mutex_unlock(&recordAllocDataMutex);
 	}
 	
 	return obj;
Index: json-c-0.13.1/json_util.c
===================================================================
--- json-c-0.13.1.orig/json_util.c	2021-01-29 13:15:06.838078741 +0800
+++ json-c-0.13.1/json_util.c	2021-01-29 13:15:06.850078741 +0800
@@ -149,9 +149,7 @@
 	}
 	else
 	{
-		pthread_mutex_lock(&recordAllocDataMutex);
 		recordFrontendZcfgAllocData(obj, fileName, line);
-		pthread_mutex_unlock(&recordAllocDataMutex);
 	}
 	
 	return obj;
Index: json-c-0.13.1/json.h
===================================================================
--- json-c-0.13.1.orig/json.h	2021-01-29 13:15:06.838078741 +0800
+++ json-c-0.13.1/json.h	2021-01-29 13:25:32.446080975 +0800
@@ -33,6 +33,8 @@
 #include "json_c_version.h"
 
 #ifdef ZCFG_MEMORY_LEAK_DETECT
+//#define json_object_new_boolean(i) _json_object_new_boolean(b, __FILE__, __LINE__)
+//#define json_object_new_int(i) _json_object_new_int(i, __FILE__, __LINE__)
 #define json_object_new_object(void) _json_object_new_object(__FILE__, __LINE__)
 #define json_object_new_array(void) _json_object_new_array(__FILE__, __LINE__)
 #define json_object_new_string(strParameter) _json_object_new_string(strParameter, __FILE__, __LINE__)
