Index: json-c-0.13.1/arraylist.c
===================================================================
--- json-c-0.13.1.orig/arraylist.c	2019-08-13 17:22:54.000000000 +0800
+++ json-c-0.13.1/arraylist.c	2019-08-13 17:24:34.633554000 +0800
@@ -83,6 +83,18 @@
   free(arr);
 }
 
+void *array_list_pull_idx(struct array_list *arr, int i)
+{
+  void *arrayidx = NULL;
+
+  if(i >= arr->length || i < 0) return NULL;
+
+  arrayidx = arr->array[i];
+  arr->array[i] = NULL;
+
+  return arrayidx;
+}
+
 void*
 array_list_get_idx(struct array_list *arr, size_t i)
 {
Index: json-c-0.13.1/arraylist.h
===================================================================
--- json-c-0.13.1.orig/arraylist.h	2019-08-13 17:22:54.000000000 +0800
+++ json-c-0.13.1/arraylist.h	2019-08-13 17:24:34.633554000 +0800
@@ -47,6 +47,8 @@
 extern void*
 array_list_get_idx(struct array_list *al, size_t i);
 
+extern void *array_list_pull_idx(struct array_list *, int);
+
 extern int
 array_list_put_idx(struct array_list *al, size_t i, void *data);
 
Index: json-c-0.13.1/json_object.c
===================================================================
--- json-c-0.13.1.orig/json_object.c	2019-08-13 17:22:54.000000000 +0800
+++ json-c-0.13.1/json_object.c	2019-08-13 17:27:40.914920242 +0800
@@ -523,6 +523,33 @@
 	return 0;
 }
 
+struct json_object *json_object_object_pull(struct json_object *j, const char *k)
+{
+   struct lh_entry *e = j ? lh_table_lookup_entry(j->o.c_object, k) : NULL;
+   struct json_object *v = NULL;
+
+   if(e){
+       v = (struct json_object *)e->v;
+       e->v = NULL;
+       return v;
+   }else
+       return NULL;
+}
+
+struct json_object *json_object_object_pull_and_empty(struct json_object *j, const char *k)
+{
+   struct lh_entry *e = j ? lh_table_lookup_entry(j->o.c_object, k) : NULL;
+   struct json_object *v = NULL;
+
+   if(e){
+       v = (struct json_object *)e->v;
+       e->v = NULL;
+       lh_table_delete_entry(j->o.c_object, e);
+   }
+
+   return v;
+}
+                                                                                           
 int json_object_object_add(struct json_object* jso, const char *key,
                            struct json_object *val)
 {
@@ -1327,6 +1354,11 @@
 	return array_list_del_idx(jso->o.c_array, idx, count);
 }
 
+struct json_object *json_object_array_pull_idx(struct json_object *jso, int idx)
+{
+  return array_list_pull_idx(jso->o.c_array, idx);
+}
+
 struct json_object* json_object_array_get_idx(const struct json_object *jso,
 					      size_t idx)
 {
Index: json-c-0.13.1/json_object.h
===================================================================
--- json-c-0.13.1.orig/json_object.h	2019-08-13 17:22:54.000000000 +0800
+++ json-c-0.13.1/json_object.h	2019-08-13 17:24:34.633554000 +0800
@@ -433,6 +433,9 @@
  */
 JSON_C_CONST_FUNCTION(JSON_EXPORT size_t json_c_object_sizeof(void));
 
+extern struct json_object *json_object_object_pull(struct json_object *j, const char *k);
+extern struct json_object *json_object_object_pull_and_empty(struct json_object *j, const char *k);
+
 /** Add an object field to a json_object of type json_type_object
  *
  * The reference count will *not* be incremented. This is to make adding
@@ -669,6 +672,8 @@
 JSON_EXPORT int json_object_array_put_idx(struct json_object *obj, size_t idx,
 				     struct json_object *val);
 
+extern struct json_object *json_object_array_pull_idx(struct json_object *obj, int idx);
+
 /** Get the element at specificed index of the array (a json_object of type json_type_array)
  * @param obj the json_object instance
  * @param idx the index to get the element at
