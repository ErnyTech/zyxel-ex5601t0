Index: json-c-0.13.1/json_tokener.c
===================================================================
--- json-c-0.13.1.orig/json_tokener.c	2019-08-13 17:30:00.000000000 +0800
+++ json-c-0.13.1/json_tokener.c	2019-08-13 17:30:29.915105999 +0800
@@ -163,8 +163,16 @@
 {
     enum json_tokener_error jerr_ignored;
     struct json_object* obj;
+
+#if 1 /* cpwang, minimize number of writing to flash, 2017-03-17 09:57:19 */
+    // return ASAP to avoid overhead
+    if (str == NULL) {
+        return NULL;
+    }
+#endif /* cpwang, minimize number of writing to flash, 2017-03-17 09:57:19 */
+
     obj = json_tokener_parse_verbose(str, &jerr_ignored);
-#if 0 //for zcfg	
+#if 0 //for zcfg
 	if(jerr_ignored != json_tokener_success)
 		obj = (struct json_object*)error_ptr(-jerr_ignored);
 #endif
Index: json-c-0.13.1/json_util.c
===================================================================
--- json-c-0.13.1.orig/json_util.c	2019-08-13 17:30:00.000000000 +0800
+++ json-c-0.13.1/json_util.c	2019-08-13 17:37:15.671753903 +0800
@@ -190,6 +190,11 @@
 		wpos += (unsigned int)ret;
 	}
 	fsync(fd);
+#if 1 /* cpwang, minimize number of writing to flash, 2017-03-17 09:57:19 */
+    printf("****  %s line %d, %s() : write %s to flash successfully\n",
+       __FILE__, __LINE__, __FUNCTION__, filename);
+#endif /* cpwang, minimize number of writing to flash, 2017-03-17 09:57:19 */
+
 	return 0;
 }
 
